'use client'

import { Input as ShadcnInput } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { type ComponentProps } from 'react'

interface InputFieldProps extends ComponentProps<typeof ShadcnInput> {
  label?: string
  onChangeText?: (text: string) => void
  error?: string
}

export default function InputField ({ label, onChangeText, onChange, error, className, ...props }: InputFieldProps): React.ReactNode {
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {
    if (onChange !== undefined) onChange(e)
    if (onChangeText !== undefined) onChangeText(e.target.value)
  }

  const inputClassName = [
    error !== undefined && error.length > 0 ? 'border-red-400 focus:border-red-500 focus:ring-red-300' : '',
    className ?? ''
  ].join(' ').trim()

  return (
    <div className='w-full mb-4'>
      {label && label.length > 0 && (
        <Label className='block text-sm font-medium text-gray-700 mb-1'>
          {label}
        </Label>
      )}
      <ShadcnInput {...props} className={inputClassName} onChange={handleChange} />
      {error !== undefined && error.length > 0 && (
        <p className='mt-2 text-sm text-red-500'>
          {error}
        </p>
      )}
    </div>
  )
}
